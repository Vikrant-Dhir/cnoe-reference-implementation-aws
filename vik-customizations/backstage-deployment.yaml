apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: backstage:apps/Deployment:backstage/backstage
    deployment.kubernetes.io/revision: "1"
    
  name: backstage
  namespace: backstage

spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: backstage
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: backstage
    spec:
      containers:
      - command:
        - node
        - packages/backend
        - --config
        - config/app-config.yaml
        envFrom:
        - secretRef:
            name: backstage-env-vars
        image: public.ecr.aws/cnoe-io/backstage:v0.0.2
        imagePullPolicy: IfNotPresent
        name: backstage
        ports:
        - containerPort: 7007
          name: http
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/config
          name: backstage-config
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: backstage
      serviceAccountName: backstage
      terminationGracePeriodSeconds: 30
      volumes:
      - name: backstage-config
        projected:
          defaultMode: 420
          sources:
          - secret:
              items:
              - key: github-integration.yaml
                path: github-integration.yaml
              name: integrations
          - configMap:
              items:
              - key: app-config.yaml
                path: app-config.yaml
              name: backstage-config
          - secret:
              items:
              - key: k8s-config.yaml
                path: k8s-config.yaml
              name: k8s-config
